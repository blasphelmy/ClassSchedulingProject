@{
    ViewData["Title"] = ViewData["Title"];
    UserInformation thisUser = new UserInformation();
    List<int> AvailableYears = new List<int>();
    for(int x = 0; x < 4; x++)
    {
        AvailableYears.Add(DateTime.Now.Year + x);
    }
    if(ViewBag.isAuthorized == 1)
    {
        thisUser = ViewBag.thisUser;
    }
}
<style>
body {
     overflow: hidden;
}
.fc-timegrid-slot {
    height: 0px!important;
    border-bottom: 0 !important;
}
.fc-v-event {
    background-color: rgba(23, 34, 54,.4);
}
#eventPopUP {
    height: 405px;
    width: 326px;
}
#addEventPopUp{
    height: 505px;
    width:700px;
    overflow: hidden;
}
.popup {
    position: absolute;
    font-size: 14px;
    top: 0px;
    left: 0px;
    background-color: inherit;
    color: #000;
    padding: 10px;
    z-index: 999;
    -webkit-box-shadow: 0px 2px 10px 5px rgba(0,0,0,0.27); 
    box-shadow: 0px 2px 10px 5px rgba(0,0,0,0.27);
    overflow-y: scroll;
}
#ptitle {
    font-size: 20px;
}
.pauthor {
    opacity: .8;
}
#pdescription {
    opacity: .9;
    font-size: 12px;
    margin-top: 10px;
}
#comments {
    font-size: 12px;
    opacity: .8;
    overflow-y: scroll;
}
</style>

<div style="padding-left: 20px; overflow:hidden; max-width: 100%">
    <div class="row">
        <div class="col">
            <h2>@thisUser.PrimaryInstitution.InstitutionName</h2>
            <div>
                <span>
                    <select id="dptSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Dept</option>
                      <option value="CSI">CSI</option>
                      <option value="AUTO">Auto</option>
                    </select>
                    <select id="yearSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Year</option>
                        @foreach(int year in AvailableYears)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                    <select id="qSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Quarter</option>
                      <option value="1">Winter</option>
                      <option value="2">Spring</option>
                      <option value="3">Summer</option>
                      <option value="4">Fall</option>
                    </select>
                    <select id="building" class="custom-select-sm" style="margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Building</option>
                      <option value="J">J</option>
                    </select>
                    <select id="room" class="custom-select-sm" style="margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Room</option>
                      <option value="108">108</option>
                      <option value="111">111</option>
                      <option value="112">112</option>
                      <option value="114">114</option>
                    </select>
                </span>
                <div style="">
                    <label for="formControlRange" style="position:relative; bottom: 3px">Scale : </label>
                <input type="range" id="viewSizeRangeSlider" class="form-control-range-sm" step="1" max="5" min="1" value="4" onchange="renderCalendar()">
            </div>
            </div>
        </div>
    </div>
    <div style="height: calc(100vh - 200px);" class="row">
        <div class="col-lg-12">
            <div id='calendar'></div>
        </div>
@*       <div class="col-lg-4">
            <div class="row">
                <p>hello</p>
            </div>
        </div>*@
    </div>
</div>

<link rel="stylesheet" href="libCal/main.css" />
<script src="libCal/main.js"></script>
<script src="js/app.js"></script>
<script src="js/calendar.js"></script>
<script>
let caldata = {
    firstName: "@thisUser.FirstName",
    lastName: "@thisUser.LastName",
    userAccountID: "@thisUser.AccountHash",
}
function updateTimer(delay) {
    setTimeout(function () {
        console.log("update timer set");
        if (elements.checkNull() && newCalender.isActive === 0 && isFetching === 0) {
            isFetching = 1;
            fetchData(new Object);
        }
        updateTimer(delay);
    }, delay);
}

let fetchData = (e) => {
    console.log("fetching data...");
    try {
        localStorage.setItem(e.id, e.value);
    } catch {
    }
    if (!elements.checkNull()) {
            return createCalender(caldata);
        }
    let filterterms = `${elements.year.val()},${elements.quarter.val()},${elements.building.val()},${elements.room.val()}`;
    //console.log(filterterms);
    fetch(`/home/fetchEvents?filterterms=${filterterms}`).then(response => response.json()).then((data) => {
        if (data !== "error") {
            if (newCalender.init === 0) {
                newCalender.parseEvents(data);
                createCalender(newCalender.data.events);
            } else {
                newCalender.updateEvents(data);
            }
        } else {
            console.log("error fetching calendar events...")
        }
        setTimeout(function() {
            isFetching = 0;
        }, 200);
    });
}
function fetchNewCalendar(element) {
    newCalender = new CalenderApp(caldata);
    fetchData(element);
}
</script>