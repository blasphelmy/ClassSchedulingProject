@using Newtonsoft.Json
@{
    ViewData["Title"] = ViewData["Title"];
    UserInformation thisUser = new UserInformation();
    List<int> AvailableYears = new List<int>();
    for(int x = 0; x < 4; x++)
    {
        AvailableYears.Add(DateTime.Now.Year + x);
    }
    if(ViewBag.isAuthorized == 1)
    {
        thisUser = ViewBag.thisUser;
    }
}
<style>

</style>

<div style="padding-left: 20px; overflow:hidden; max-width: 100%">
    <div class="row">
        <div class="col">
            <h2>@thisUser.PrimaryInstitution.InstitutionName</h2>
            <p>Welcome, @thisUser.FirstName @thisUser.LastName</p>
            <p>Role : <span id="role"></span></p>
            <div>
                <span>
                    <select id="dptSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected></option>
                      @foreach(ProgramOfferings program in thisUser.Department.ProgramOfferings){
                        <option value="@program.Id">@program.ProgramName @program.ProgramType</option>
                      }
                    </select>
                    <select id="yearSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Year</option>
                        @foreach(int year in AvailableYears)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                    <select id="qSel" class="custom-select-sm" style="margin-top: 25px; margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Quarter</option>
                      <option value="1">Winter</option>
                      <option value="2">Spring</option>
                      <option value="3">Summer</option>
                      <option value="4">Fall</option>
                    </select>
                    <select id="building" class="custom-select-sm" style="margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Building</option>
                      <option value="J">J</option>
                    </select>
                    <select id="room" class="custom-select-sm" style="margin-bottom: 25px;" onchange="fetchNewCalendar(this)">
                      <option selected>Select Room</option>
                      <option value="108">108</option>
                      <option value="111">111</option>
                      <option value="112">112</option>
                      <option value="114">114</option>
                    </select>
                </span>
                    <div style="">
                        <label for="formControlRange" style="position:relative; bottom: 3px">Scale : </label>
                    <input type="range" id="viewSizeRangeSlider" class="form-control-range-sm" step="1" max="5" min="1" value="4" onchange="renderCalendar()">
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="padding-right: 20px;">
        <div style="height: 100vh;" class="col-lg-7">
            <div id='calendar'></div>
        </div>
        <div class="col-lg-5">
            <div class="accordion" id="accordionFilteredEvents">
                <div id="filteredEvents"></div>
            </div>
            <br />
            <div class="accordion" id="accordionAllEvents">
                <div id="allEvents"></div>
            </div>
            <br />
            <div class="accordion" id="accordionEventemplates">
                <div id="EventTemplates"></div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="/css/calendarAppDefaults.css" />
<link rel="stylesheet" href="/libCal_f/main.css" />
<script src="/libCal_f/main.js"></script>
<script src="/js/app.js"></script>
<script src="/js/calendar.js"></script>
<script src="/js/popUpRenderer.js"></script>
<script src="/js/createDraggableElement.js"></script>
<script src="/js/appHelpers.js"></script>
<script src="/lib/react/reactDev.js" crossorigin></script>
<script src="/lib/react/reactDomDev.js" crossorigin></script>
<script src="/lib/react/babel7189.js"></script>
<script>
let caldata = {
    firstName: "@thisUser.FirstName",
    lastName: "@thisUser.LastName",
    userAccountID: "@thisUser.EventsAuthorId",
    userAccountLevel: "@thisUser.AccountFlag",
    UserAssociatedDepartment: "@thisUser.Department.DepartmentName",
    ProgramType: "@thisUser.Department.ProgramOfferings.ToList()[0].ProgramType",
    ProgramName: "@thisUser.Department.ProgramOfferings.ToList()[0].ProgramName",
    EventTemplates: JSON.parse('@Html.Raw(ViewBag.CourseOfferingsTemplates)'),
    institutionID: "@thisUser.PrimaryInstitutionId",
    role: @thisUser.AccountFlag,
}
let userList = JSON.parse('@Html.Raw(ViewBag.userList)')
document.getElementById("role").innerText = function() { 
    switch (caldata.role) {
        case 0: return "Admin"; break;
        case 1: return "Admin Assistant"; break;
        default: return "Professor"; break;
    }
}();
</script>
<script src="/js/Components.jsx" type="text/babel"></script>
<script src="/js/main.jsx" type="text/babel"></script>
@if(thisUser.AccountFlag < 2){
    <script type="text/babel">
        const EventTemplates = ReactDOM.createRoot(document.getElementById("EventTemplates"));
        EventTemplates.render(<EventTemplateComponent CourseOfferings={caldata.EventTemplates} />);
    </script>
}
@*    <script type="text/babel">
        const EventTemplates = ReactDOM.createRoot(document.getElementById("EventTemplates"));
        EventTemplates.render(<EventTemplateComponent CourseOfferings={caldata.EventTemplates} />);
    </script>*@