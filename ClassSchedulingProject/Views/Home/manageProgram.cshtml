@model UserInformation
@{
    ProgramOfferings _f = null;
    List<CourseOfferingsTemplates> courses = new List<CourseOfferingsTemplates>();
}

<div style="padding-left: 20px; overflow:hidden; max-width: 100%;">
    <select id="programID" style="margin-bottom: 10px">
        @foreach (ProgramOfferings program in Model.Department.ProgramOfferings)
        {
            @if(_f == null) {
                _f = program;
                courses = _f.CourseOfferingsTemplates.ToList();
                courses.Sort((a, b) => a.QuarterNumber.CompareTo(b.QuarterNumber));
            }
            <option value="@program.Id">@program.ProgramName</option>
        }
        <option value="addNewProgram">Add a New Program</option>
    </select>
    @if(courses != null){
        <p>Courses for @_f.ProgramName</p>
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>Quarter</th>
                    <th>Course Prefix</th>
                    <th>Course Number</th>
                    <th>Title</th>
                    <th>Component</th>
                </tr>
            </thead>
            <tbody>
                @foreach(CourseOfferingsTemplates course in courses){
                <tr id="tableRow-@course.Id">
                    <td><input data="QuarterNumber" type="number" min="1" max="8" value="@course.QuarterNumber"></td>
                    <td><select data="CoursePrefix">
                        <option value="@course.CoursePrefix">@course.CoursePrefix</option>
                        @foreach(ValidPrefixes prefix in Model.Department.ValidPrefixes){
                            <option value="@prefix.Prefix">@prefix.Prefix</option>
                        }
                    </select></td>
                    <td><input data="CourseNumber" type="text" value="@course.CourseNumber"></td>
                    <td><input data="Title" type="text" value="@course.Title"></td>
                    <td><select data="Component">
                        <option value="@course.Component">@course.Component</option>
                        <option value="Lecture">Lecture</option>
                        <option value="Lab">Lab</option>
                        <option value="Ind Study"></option>
                    </select></td>
                    <td><a id="@course.Id" href="#" onclick="save('tableRow-@course.Id')">Save</a></td>
                </tr>
                }
            </tbody>
        </table>
    }
</div>
<script>
    function save(id){
        let tableRowElement = $(`#${id} td`);
        let programID = document.getElementById("programID").value;

        var newPost = {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: {
                Id : Number(id.split("-")[1]),
                ProgramId : Number(document.getElementById("programID").value)
            }
        }
        
        tableRowElement.each(function(i, o){
            switch(o.firstChild.getAttribute("data")){
                case "QuarterNumber": newPost.body.QuarterNumber = Number(o.firstChild.value); break;
                case "CoursePrefix": newPost.body.CoursePrefix = o.firstChild.value.toString(); break;
                case "CourseNumber": newPost.body.CourseNumber = Number(o.firstChild.value); break;
                case "Title": newPost.body.Title = o.firstChild.value.toString(); break;
                case "Component": newPost.body.Component = o.firstChild.value.toString(); break;
                case "QuarterNumber": newPost.body.QuarterNumber = Number(o.firstChild.value); break;
            }
        })
        newPost.body = JSON.stringify(newPost.body);
        fetch("/home/saveProgramEventTemplate", newPost).then(data => data.json().then(function(data){
            console.log(data);
        }))
        console.log(newPost.body);
    }
</script>