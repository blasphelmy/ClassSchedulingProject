/*
Deployment script for ClassSchedulerAPIData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ClassSchedulerAPIData"
:setvar DefaultFilePrefix "ClassSchedulerAPIData"
:setvar DefaultDataPath "C:\Users\David Nguyen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\David Nguyen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Table [dbo].[apiEvents]...';


GO
CREATE TABLE [dbo].[apiEvents] (
    [Id]              INT           IDENTITY (1, 1) NOT NULL,
    [eventData]       VARCHAR (MAX) NOT NULL,
    [eventAuthorHash] VARCHAR (512) NOT NULL,
    [institutonID]    VARCHAR (64)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[calendarBookBackUps]...';


GO
CREATE TABLE [dbo].[calendarBookBackUps] (
    [Id]              INT           IDENTITY (1, 1) NOT NULL,
    [institutonID]    VARCHAR (64)  NOT NULL,
    [completeBooking] VARCHAR (MAX) NOT NULL,
    [backupNumber]    INT           NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [uniqueBackUp] UNIQUE NONCLUSTERED ([institutonID] ASC, [backupNumber] ASC)
);


GO
PRINT N'Creating Foreign Key [dbo].[eventAuthorReference]...';


GO
ALTER TABLE [dbo].[apiEvents] WITH NOCHECK
    ADD CONSTRAINT [eventAuthorReference] FOREIGN KEY ([eventAuthorHash]) REFERENCES [dbo].[UserInformation] ([accountHash]);


GO
PRINT N'Creating Foreign Key [dbo].[eventInstitutionReference]...';


GO
ALTER TABLE [dbo].[apiEvents] WITH NOCHECK
    ADD CONSTRAINT [eventInstitutionReference] FOREIGN KEY ([institutonID]) REFERENCES [dbo].[InstitutionsRegistry] ([InstitutionID]);


GO
PRINT N'Creating Foreign Key [dbo].[backupInstitutionReference]...';


GO
ALTER TABLE [dbo].[calendarBookBackUps] WITH NOCHECK
    ADD CONSTRAINT [backupInstitutionReference] FOREIGN KEY ([institutonID]) REFERENCES [dbo].[InstitutionsRegistry] ([InstitutionID]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[apiEvents] WITH CHECK CHECK CONSTRAINT [eventAuthorReference];

ALTER TABLE [dbo].[apiEvents] WITH CHECK CHECK CONSTRAINT [eventInstitutionReference];

ALTER TABLE [dbo].[calendarBookBackUps] WITH CHECK CHECK CONSTRAINT [backupInstitutionReference];


GO
PRINT N'Update complete.';


GO
